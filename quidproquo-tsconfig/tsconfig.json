{
  "compilerOptions": {
    "module": "commonjs", // The module system for the program
    "moduleResolution": "node", // How imports are resolved
    "esModuleInterop": true, // module imports are ES6 complient
    "target": "ES6", // Modern browsers support all ES6 features
    "lib": ["ES6", "dom"], // Type definitions for ES6 and browser features
    "allowSyntheticDefaultImports": true, // import React from "react"; vs import * as React from "react";

    "strict": true, // strict mode for better type checking
    "alwaysStrict": true, // pass with ECMAScript strict mode
    "strictNullChecks": true, // null and undefined are different
    "noImplicitAny": true, // Force users to define types
    "noImplicitThis": true, // Throw error when this is "any" ~ we shouln't use this
    "noImplicitReturns": true, // Make sure all paths return a value
    "noFallthroughCasesInSwitch": true, // make sure we have a default in our case statements
    "forceConsistentCasingInFileNames": true, // force consistent case in file names for windows / mac dev

    "noEmit": false, // Do not emit compiler output files, leave it to babel
    "sourceMap": false, // don't emit source maps

    "resolveJsonModule": true, // We can import json

    "jsx": "react-jsx", // Emit .js files with the JSX changed to _jsx calls (React 17+?)
    "allowJs": true, // We can import JS files not just ts / tsx etc

    "declaration": true // build type definitions
  }
}
